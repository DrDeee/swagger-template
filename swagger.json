{"basePath": "/api/v1", "consumes": ["application/json"], "definitions": {"Client": {"properties": {"all_groups": {"description": "if the client can access all groups", "type": "boolean"}, "client_id": {"description": "client str id", "type": "string"}, "groups": {"allOf": [{"$ref": "#/definitions/Groups"}], "description": "list of groups the client can access"}, "id": {"description": "client int id", "type": "integer"}, "name": {"description": "client name", "type": "string"}, "owner": {"allOf": [{"$ref": "#/definitions/FrontendUserLite"}], "description": "the client owner"}, "platform": {"description": "client platform", "enum": ["matrix", "whatsapp", "telegram"], "example": "matrix", "type": "string"}, "token": {"description": "client token", "type": "string"}}, "required": ["client_id", "name", "platform"], "type": "object"}, "ClientLite": {"properties": {"all_groups": {"description": "if the client can access all groups", "type": "boolean"}, "client_id": {"description": "client str id", "type": "string"}, "id": {"description": "client int id", "type": "integer"}, "name": {"description": "client name", "type": "string"}, "platform": {"description": "client platform", "enum": ["matrix", "whatsapp", "telegram"], "example": "matrix", "type": "string"}, "token": {"description": "client token", "type": "string"}}, "required": ["client_id", "name", "platform"], "type": "object"}, "ClientNew": {"properties": {"client_id": {"description": "client str id", "type": "string"}, "name": {"description": "client name", "type": "string"}, "platform": {"description": "client platform", "enum": ["matrix", "whatsapp", "telegram"], "example": "matrix", "type": "string"}}, "required": ["client_id", "name", "platform"], "type": "object"}, "ClientUpdate": {"properties": {"all_groups": {"description": "if the client can access all groups", "type": "boolean"}, "client_id": {"description": "new client str id", "type": "string"}, "name": {"description": "client name", "type": "string"}, "owner_id": {"description": "the str_id of th new client owner", "type": "string"}}, "type": "object"}, "Clients": {"properties": {"all_groups": {"description": "if the client can access all groups", "type": "boolean"}, "client_id": {"description": "client str id", "type": "string"}, "groups": {"allOf": [{"$ref": "#/definitions/Groups"}], "description": "list of groups the client can access"}, "id": {"description": "client int id", "type": "integer"}, "name": {"description": "client name", "type": "string"}, "owner": {"allOf": [{"$ref": "#/definitions/FrontendUserLite"}], "description": "the client owner"}, "platform": {"description": "client platform", "enum": ["matrix", "whatsapp", "telegram"], "example": "matrix", "type": "string"}, "token": {"description": "client token", "type": "string"}}, "required": ["client_id", "name", "platform"], "type": "object"}, "ClientsInfo": {"properties": {"all_groups": {"description": "if the client can access all groups", "type": "boolean"}, "client_id": {"description": "client str id", "type": "string"}, "id": {"description": "client int id", "type": "integer"}, "name": {"description": "client name", "type": "string"}, "owner": {"allOf": [{"$ref": "#/definitions/FrontendUserLite"}], "description": "the client owner"}, "platform": {"description": "client platform", "enum": ["matrix", "whatsapp", "telegram"], "example": "matrix", "type": "string"}}, "type": "object"}, "Feedback": {"properties": {"feedback": {"description": "error description", "type": "string"}}, "required": ["feedback"], "type": "object"}, "FrontendUserLite": {"properties": {"avatar_url": {"description": "url to user avatar", "type": "string"}, "id": {"description": "user id in database", "type": "integer"}, "user_id": {"description": "user id from identity provider", "type": "string"}, "user_name": {"description": "user name", "type": "string"}}, "required": ["avatar_url", "id", "user_id", "user_name"], "type": "object"}, "Groups": {"properties": {"description": {"description": "user group description", "type": "string"}, "id": {"description": "user group identifier", "type": "integer"}, "name": {"description": "user group name", "type": "string"}}, "type": "object"}, "Messages": {"properties": {"event_id": {"description": "message id from messenger", "type": "string"}, "id": {"description": "message database id", "type": "integer"}, "message": {"description": "message text", "type": "string"}, "message_type": {"description": "Where the message ist from", "enum": ["received", "send"], "example": "received", "type": "string"}, "reply_event": {"description": "optional reply_event", "type": "string"}, "send": {"description": "true, if a message from the frontend was sent by a messenger client", "type": "boolean"}, "ticket_id": {"description": "ticket the message is connected to", "type": "integer"}, "timestamp": {"description": "ISO 8601 Timestamp", "format": "date-time", "type": "string"}}, "required": ["event_id", "message", "timestamp"], "type": "object"}, "MessagesMissed": {"properties": {"id": {"description": "message database id", "type": "integer"}, "message": {"description": "message text", "type": "string"}, "reply_event": {"description": "optional reply_event", "type": "string"}, "room_id": {"description": "room the message is from", "type": "string"}}, "required": ["message", "room_id"], "type": "object"}, "MessengerUser": {"properties": {"avatar_url": {"description": "url to user avatar", "type": "string"}, "id": {"description": "user id in the database", "type": "integer"}, "platform": {"description": "platform name", "enum": ["matrix", "whatsapp", "telegram"], "example": "matrix", "type": "string"}, "user_id": {"description": "user id from messenger", "type": "string"}, "user_name": {"description": "user name from messenger", "type": "string"}}, "required": ["avatar_url", "id", "platform", "user_id", "user_name"], "type": "object"}, "MessengerUsers": {"properties": {"avatar_url": {"description": "url to user avatar", "type": "string"}, "id": {"description": "user id in the database", "type": "integer"}, "platform": {"description": "platform name", "enum": ["matrix", "whatsapp", "telegram"], "example": "matrix", "type": "string"}, "user_id": {"description": "user id from messenger", "type": "string"}, "user_name": {"description": "user name from messenger", "type": "string"}}, "required": ["avatar_url", "id", "platform", "user_id", "user_name"], "type": "object"}, "NewMessage": {"properties": {"event_id": {"description": "message id from messenger", "type": "string"}, "message": {"description": "message text", "type": "string"}, "reply_event": {"description": "optional reply_event", "type": "string"}, "room_id": {"description": "room the message is from", "type": "string"}, "timestamp": {"description": "ISO 8601 Timestamp", "format": "date-time", "type": "string"}}, "required": ["event_id", "message", "room_id", "timestamp"], "type": "object"}, "NewMessageFe": {"properties": {"message": {"description": "message text", "type": "string"}, "reply_event": {"description": "optional reply_event", "type": "string"}}, "required": ["message"], "type": "object"}, "SendMessage": {"properties": {"event_id": {"description": "message id from messenger", "type": "string"}, "id": {"description": "message database id", "type": "integer"}}, "required": ["event_id"], "type": "object"}, "Ticket": {"properties": {"creator": {"allOf": [{"$ref": "#/definitions/MessengerUser"}], "description": "the messenger user the ticket is from"}, "editors": {"allOf": [{"$ref": "#/definitions/MessengerUsers"}], "description": "list of assigned editors"}, "id": {"description": "ticket id in database", "type": "integer"}, "message_count": {"description": "complete message count", "type": "integer"}, "new_messages": {"description": "unread message count", "type": "integer"}, "platform": {"description": "platform name", "enum": ["matrix", "whatsapp", "telegram"], "example": "matrix", "type": "string"}, "state": {"description": "current state of the ticket (new, open, closed, archived)", "enum": ["new", "open", "closed", "archived"], "example": "new", "type": "string"}, "summary": {"description": "ticket summary", "type": "string"}, "title": {"description": "ticket title", "type": "string"}}, "required": ["id", "message_count", "new_messages", "platform", "summary", "title"], "type": "object"}, "TicketUpdate": {"properties": {"state": {"description": "current state of the ticket (new, open, closed, archived)", "enum": ["new", "open", "closed", "archived"], "example": "new", "type": "string"}, "summary": {"description": "ticket summary", "type": "string"}, "title": {"description": "ticket title", "type": "string"}}, "type": "object"}, "Tickets": {"properties": {"creator": {"allOf": [{"$ref": "#/definitions/MessengerUser"}], "description": "the messenger user the ticket is from"}, "editors": {"allOf": [{"$ref": "#/definitions/MessengerUsers"}], "description": "list of assigned editors"}, "id": {"description": "ticket id in database", "type": "integer"}, "message_count": {"description": "complete message count", "type": "integer"}, "new_messages": {"description": "unread message count", "type": "integer"}, "platform": {"description": "platform name", "enum": ["matrix", "whatsapp", "telegram"], "example": "matrix", "type": "string"}, "state": {"description": "current state of the ticket (new, open, closed, archived)", "enum": ["new", "open", "closed", "archived"], "example": "new", "type": "string"}, "summary": {"description": "ticket summary", "type": "string"}, "title": {"description": "ticket title", "type": "string"}}, "required": ["id", "message_count", "new_messages", "platform", "summary", "title"], "type": "object"}}, "host": "example.org", "info": {"description": "API for the messenger helpdesk", "title": "Messenger Helpdesk", "version": "0.1"}, "paths": {"/avatars/upload": {"post": {"operationId": "post_avatar", "responses": {"200": {"description": "Success"}}, "tags": ["avatars"]}}, "/avatars/{avatar}": {"get": {"operationId": "get_avatar", "responses": {"200": {"description": "Success"}}, "tags": ["avatars"]}, "parameters": [{"in": "path", "name": "avatar", "required": true, "type": "string"}]}, "/clients/": {"get": {"description": "All clients if you have admin privileges otherwise the clients you own", "operationId": "get_clients", "parameters": [{"description": "***", "in": "header", "name": "Authorization", "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Clients"}}}, "security": [{"bearerAuth": []}], "tags": ["clients"]}, "post": {"description": "Create a new client", "operationId": "post_clients", "parameters": [{"description": "***", "in": "header", "name": "Authorization", "type": "string"}, {"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/ClientNew"}}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Client"}}}, "security": [{"bearerAuth": []}], "tags": ["clients"]}}, "/clients/delete/{client_id}": {"get": {"operationId": "get_clients", "parameters": [{"description": "***", "in": "query", "name": "Authentication", "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Feedback"}}}, "security": [{"bearerAuth": []}], "tags": ["clients"]}, "parameters": [{"in": "path", "name": "client_id", "required": true, "type": "integer"}]}, "/clients/token/{client_id}": {"get": {"operationId": "get_clients", "parameters": [{"description": "***", "in": "query", "name": "Authentication", "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ClientLite"}}}, "security": [{"bearerAuth": []}], "tags": ["clients"]}, "parameters": [{"in": "path", "name": "client_id", "required": true, "type": "integer"}]}, "/clients/update/{client_id}": {"parameters": [{"in": "path", "name": "client_id", "required": true, "type": "integer"}], "put": {"operationId": "put_clients", "parameters": [{"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/ClientUpdate"}}], "responses": {"200": {"description": "Success"}}, "security": [{"bearerAuth": []}], "tags": ["clients"]}}, "/groups/": {"get": {"operationId": "get_groups", "parameters": [{"description": "***", "in": "header", "name": "Authorization", "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Groups"}}}, "security": [{"bearerAuth": []}], "tags": ["groups"]}}, "/groups/{group_id}/add/{client_id}": {"parameters": [{"in": "path", "name": "group_id", "required": true, "type": "integer"}, {"in": "path", "name": "client_id", "required": true, "type": "integer"}], "put": {"description": "Add a client to a group. Requires admin or group_admin privileges.", "operationId": "put_clients", "parameters": [{"description": "***", "in": "header", "name": "Authorization", "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Feedback"}}}, "security": [{"bearerAuth": []}], "tags": ["groups"]}}, "/groups/{group_id}/clients": {"get": {"operationId": "get_clients", "parameters": [{"description": "***", "in": "header", "name": "Authorization", "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/ClientsInfo"}}}, "security": [{"bearerAuth": []}], "tags": ["groups"]}, "parameters": [{"in": "path", "name": "group_id", "required": true, "type": "integer"}]}, "/groups/{group_id}/members": {"get": {"operationId": "get_frontend_user", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/MessengerUsers"}}}, "security": [{"bearerAuth": []}], "tags": ["groups"]}, "parameters": [{"in": "path", "name": "group_id", "required": true, "type": "integer"}]}, "/groups/{group_id}/remove/{client_id}": {"parameters": [{"in": "path", "name": "group_id", "required": true, "type": "integer"}, {"in": "path", "name": "client_id", "required": true, "type": "integer"}], "put": {"description": "Add a client to a group. Requires admin or group_admin privileges.", "operationId": "put_clients", "parameters": [{"description": "***", "in": "header", "name": "Authorization", "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Feedback"}}}, "security": [{"bearerAuth": []}], "tags": ["groups"]}}, "/groups/{group_id}/tickets/{state}": {"get": {"operationId": "get_tickets", "parameters": [{"description": "***", "in": "header", "name": "Authorization", "type": "string"}, {"description": "Optionally the id of the oldest ticket you want to retrieve", "in": "query", "name": "first_ticket", "type": "integer"}, {"description": "Optionally the id of the newest ticket you want to retrieve", "in": "query", "name": "last_ticket", "type": "integer"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Tickets"}}}, "security": [{"bearerAuth": []}], "tags": ["groups"]}, "parameters": [{"in": "path", "name": "group_id", "required": true, "type": "integer"}, {"in": "path", "name": "state", "required": true, "type": "string"}]}, "/health/": {"get": {"operationId": "get_health", "responses": {"200": {"description": "Success"}}, "tags": ["health"]}}, "/messenger/groups": {"get": {"operationId": "get_groups", "parameters": [{"description": "ClientToken", "in": "header", "name": "Authorization", "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Groups"}}}, "security": [{"clientToken": []}], "tags": ["messenger"]}}, "/messenger/message": {"post": {"operationId": "post_message", "parameters": [{"description": "ClientToken", "in": "header", "name": "Authorization", "type": "string"}, {"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/NewMessage"}}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Feedback"}}}, "security": [{"clientToken": []}], "tags": ["messenger"]}}, "/messenger/missed": {"get": {"description": "Retrieve all messages that have not yet been sent", "operationId": "get_missed_message", "parameters": [{"description": "ClientToken", "in": "header", "name": "Authorization", "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/MessagesMissed"}}}, "security": [{"clientToken": []}], "tags": ["messenger"]}}, "/messenger/read/{event_id}": {"parameters": [{"in": "path", "name": "event_id", "required": true, "type": "string"}], "put": {"operationId": "put_message_read", "parameters": [{"description": "ClientToken", "in": "header", "name": "Authorization", "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Feedback"}}}, "security": [{"clientToken": []}], "tags": ["messenger"]}}, "/messenger/send": {"put": {"description": "Set send status", "operationId": "put_message_send", "parameters": [{"description": "ClientToken", "in": "header", "name": "Authorization", "type": "string"}, {"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/SendMessage"}}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Feedback"}}}, "security": [{"clientToken": []}], "tags": ["messenger"]}}, "/ticket/{ticket_id}": {"get": {"operationId": "get_ticket", "parameters": [{"description": "***", "in": "header", "name": "Authorization", "type": "string"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Ticket"}}}, "security": [{"bearerAuth": []}], "tags": ["ticket"]}, "parameters": [{"in": "path", "name": "ticket_id", "required": true, "type": "integer"}]}, "/ticket/{ticket_id}/claim": {"get": {"operationId": "get_ticket", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Feedback"}}}, "security": [{"bearerAuth": []}], "tags": ["ticket"]}, "parameters": [{"in": "path", "name": "ticket_id", "required": true, "type": "integer"}]}, "/ticket/{ticket_id}/message": {"parameters": [{"in": "path", "name": "ticket_id", "required": true, "type": "integer"}], "post": {"operationId": "post_message", "parameters": [{"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/NewMessageFe"}}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Feedback"}}}, "security": [{"bearerAuth": []}], "tags": ["ticket"]}}, "/ticket/{ticket_id}/messages": {"get": {"operationId": "get_messages", "parameters": [{"description": "***", "in": "header", "name": "Authorization", "type": "string"}, {"description": "Optionally the id of the oldest message you want to retrieve", "in": "query", "name": "first_message", "type": "integer"}, {"description": "Optionally the id of the newest message you want to retrieve", "in": "query", "name": "last_message", "type": "integer"}], "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Messages"}}}, "security": [{"bearerAuth": []}], "tags": ["ticket"]}, "parameters": [{"in": "path", "name": "ticket_id", "required": true, "type": "integer"}]}, "/ticket/{ticket_id}/unclaim": {"get": {"operationId": "get_tickets", "responses": {"200": {"description": "Success", "schema": {"$ref": "#/definitions/Feedback"}}}, "security": [{"bearerAuth": []}], "tags": ["ticket"]}, "parameters": [{"in": "path", "name": "ticket_id", "required": true, "type": "integer"}]}, "/ticket/{ticket_id}/update": {"parameters": [{"in": "path", "name": "ticket_id", "required": true, "type": "integer"}], "put": {"operationId": "put_ticket", "parameters": [{"description": "***", "in": "header", "name": "Authorization", "type": "string"}, {"in": "body", "name": "payload", "required": true, "schema": {"$ref": "#/definitions/TicketUpdate"}}], "responses": {"200": {"description": "Success"}}, "security": [{"bearerAuth": []}], "tags": ["ticket"]}}}, "produces": ["application/json"], "responses": {"MaskError": {"description": "When any error occurs on mask"}, "NotFound": {}, "ParseError": {"description": "When a mask can't be parsed"}}, "securityDefinitions": {"bearerAuth": {"bearerFormat": "***", "scheme": "bearer", "type": "http"}, "clientToken": {"scheme": "basic", "type": "http"}}, "swagger": "2.0", "tags": [{"description": "status info", "name": "health"}, {"description": "Endpoint that is used by clients.", "name": "messenger"}, {"description": "Get or update Tickets", "name": "ticket"}, {"description": "groups the fe_user can access", "name": "groups"}, {"description": "create, get, edit clients", "name": "clients"}, {"description": "upload and show user avatars", "name": "avatars"}]}
